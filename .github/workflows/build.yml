name: Build Code

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      debug:
        required: false
        type: boolean
        default: false
      run_tests:
        required: true
        type: boolean
        default: true
      bump_version:
        required: true
        type: boolean
        default: false

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
    steps:
    - uses: actions/checkout@v2

    - name: Bump version and push tag
      if: ${{ inputs.bump_version == true}}
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - shell: bash
      if: ${{ inputs.bump_version == true}}
      name: Create tag file
      run: |
        echo ${{ steps.tag_version.outputs.new_tag }} > tag.txt
        echo ${{ steps.tag_version.outputs.changelog }} > tag_changelog.txt

    - shell: bash
      if: ${{ inputs.bump_version == false}}
      name: Create tag file
      run: |
        echo "0.0.0" > tag.txt
        echo "No tag generated" > tag_changelog.txt

    - name: Upload tag version
      uses: actions/upload-artifact@v1
      with:
        name: tag_version
        path: ./tag.txt

    - name: Upload tag changelog
      uses: actions/upload-artifact@v1
      with:
        name: tag_changelog
        path: ./tag_changelog.txt

    - name: Removing tag files
      run: |
        rm tag.txt
        rm tag_changelog.txt

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.8.1

    - name: Build
      working-directory: src
      run: go build -v ./...

    - name: Test
      if: ${{ inputs.run_tests == true}}
      run: |
        go install github.com/axw/gocov/gocov@latest
        go install github.com/AlekSi/gocov-xml@latest
        go install github.com/matm/gocov-html/cmd/gocov-html@latest

        go test -coverprofile coverage.txt -covermode count -v ./...
        gocov convert coverage.txt | gocov-xml > cobertura-coverage.xml

    - name: Code Coverage Summary Report
      if: ${{ inputs.run_tests == true}}
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: cobertura-coverage.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: '80 80'
        
    - name: Add Coverage PR Comment
      if: ${{ inputs.run_tests == true}}
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        recreate: true
        path: code-coverage-results.md
    
    - name: Helm Chart Lint
      if: ${{ inputs.run_tests == true}}
      run: |
        helm lint ./charts

    - shell: bash
      if: ${{ inputs.bump_version == true}}
      name: Bump package version
      run: |
        NEW_TAG_NAME=$(echo ${{ steps.tag_version.outputs.new_tag }} | sed 's/v//g')
        sed -i "s/^var ver = \"[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\"/var ver = \"$NEW_TAG_NAME\"/g" ./src/main.go
        sed -i "s/^version: [[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+/version: $NEW_TAG_NAME/g" ./charts/Chart.yaml
        sed -i "s/^appVersion: \"[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\"/appVersion: \"$NEW_TAG_NAME\"/g" ./charts/Chart.yaml

    - name: Upload changes
      if: ${{ inputs.bump_version == true}}
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_user_name: github-actions
        commit_user_email: github-actions@github.com
        # create_branch: true
        # branch: version-${{ steps.tag_version.outputs.new_tag }}